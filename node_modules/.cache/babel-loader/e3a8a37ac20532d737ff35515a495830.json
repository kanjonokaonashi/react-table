{"ast":null,"code":"var _jsxFileName = \"/home/mary/react-table/src/components/Table.js\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Table extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [{\n        \"id\": \"a16627\",\n        \"name\": \"Continental breakfast\",\n        \"category\": \"breakfast\",\n        \"description\": \"turkey fillet, cheese Cheddar, small croissant, grilled baguette, honey, avocado pashtet\",\n        \"weight\": 250,\n        \"diet\": \"non-vegetarian\",\n        \"price\": 1900\n      }, {\n        \"id\": \"a13739\",\n        \"name\": \"Breakfast Healthy Box\",\n        \"category\": \"breakfast\",\n        \"description\": \"broccoli, avocado, toast, egg, quinoa, cherry tomato\",\n        \"weight\": 450,\n        \"diet\": \"vegetarian\",\n        \"price\": 2490\n      }, {\n        \"id\": \"a93675\",\n        \"name\": \"Bruschetta with cherry tomato\",\n        \"category\": \"appetizers\",\n        \"description\": \"baguette, cherry tomato, cheese Parmesan, pesto sauce\",\n        \"weight\": 252,\n        \"diet\": \"vegetarian\",\n        \"price\": 1800\n      }, {\n        \"id\": \"a93472\",\n        \"name\": \"Vegetable plate\",\n        \"category\": \"appetizers\",\n        \"description\": \"cherry tomato, carrot, red radish, cucumber, pepper, parsley, tar-tar sauce\",\n        \"weight\": 312,\n        \"diet\": \"vegetarian\",\n        \"price\": 2700\n      }, {\n        \"id\": \"a36395\",\n        \"name\": \"Salad with quinoa\",\n        \"category\": \"salads\",\n        \"description\": \"quinoa, tomato, cucumber, pepper, avocado, orange\",\n        \"weight\": 290,\n        \"diet\": \"vegan\",\n        \"price\": 1900\n      }, {\n        \"id\": \"a39832\",\n        \"name\": \"Broccoli salad\",\n        \"category\": \"salads\",\n        \"description\": \"broccoli, cherry tomato, tofu cheese, avocado, Brussel cabbage, grapefruit\",\n        \"weight\": 232,\n        \"diet\": \"vegan\",\n        \"price\": 2450\n      }, {\n        \"id\": \"a47372\",\n        \"name\": \"Cream-soup with pumpkin\",\n        \"category\": \"soups\",\n        \"description\": \"pumpkin, onion, cream, garlic\",\n        \"weight\": 350,\n        \"diet\": \"vegetarian\",\n        \"price\": 1500\n      }, {\n        \"id\": \"a75296\",\n        \"name\": \"Seafood soup\",\n        \"category\": \"soups\",\n        \"description\": \"salmon fillet, crab, calamari, mussels, cherry tomato, tomato juice, onion\",\n        \"weight\": 350,\n        \"diet\": \"non-vegetarian\",\n        \"price\": 3850\n      }, {\n        \"id\": \"a55543\",\n        \"name\": \"Steak\",\n        \"category\": \"meat dishes\",\n        \"description\": \"beef fillet, garlic, sauce salsa, onion, asparagus\",\n        \"weight\": 275,\n        \"diet\": \"non-vegetarian\",\n        \"price\": 6900\n      }, {\n        \"id\": \"a11863\",\n        \"name\": \"Chuka bowl\",\n        \"category\": \"bowls\",\n        \"description\": \"sea cabbage, Cherry tomato, curd cheese\",\n        \"weight\": 132,\n        \"diet\": \"vegetarian\",\n        \"price\": 1800\n      }, {\n        \"id\": \"a44004\",\n        \"name\": \"Poka bowl\",\n        \"category\": \"bowls\",\n        \"description\": \"salmon fillet, sea cabbage, curd cheese, rice, Cherry tomato, avocado, lemon, lettuce, balsamic cream, oil\",\n        \"weight\": 350,\n        \"diet\": \"non-vegetarian\",\n        \"price\": 6500\n      }, {\n        \"id\": \"a68935\",\n        \"name\": \"Grilled chicken\",\n        \"category\": \"meat dishes\",\n        \"description\": \"chicken breast, thyme, cherry tomato, mangold, bell pepper, cucumber, zucchini, carrot, soya sauce, sauce Bechamel\",\n        \"weight\": 290,\n        \"diet\": \"non-vegetarian\",\n        \"price\": 2300\n      }, {\n        \"id\": \"a68293\",\n        \"name\": \"Pasta with pesto sauce\",\n        \"category\": \"pasta\",\n        \"description\": \"pesto sauce, garlic, cherry tomato, parmesan, spinach, zucchini, spaghetti\",\n        \"weight\": 280,\n        \"diet\": \"non-vegetarian\",\n        \"price\": 2400\n      }, {\n        \"id\": \"a26837\",\n        \"name\": \"Pasta Carbonara\",\n        \"category\": \"pasta\",\n        \"description\": \"spaghetti, bacon, cream, quail eggs, cheese Parmesan, dried basil\",\n        \"weight\": 250,\n        \"diet\": \"non-vegetarian\",\n        \"price\": 2650\n      }, {\n        \"id\": \"a88263\",\n        \"name\": \"Avocado burger\",\n        \"category\": \"burger and sandwich\",\n        \"description\": \"spinach, tomato, avocado, white sauce, egg\",\n        \"weight\": 320,\n        \"diet\": \"vegetarian\",\n        \"price\": 2100\n      }, {\n        \"id\": \"a62578\",\n        \"name\": \"Vegetable burger\",\n        \"category\": \"burger and sandwich\",\n        \"description\": \"vegetable cutlet, tomato, red onion, French sauce, lettuce, pickled cucumber\",\n        \"weight\": 299,\n        \"diet\": \"vegan\",\n        \"price\": 1600\n      }, {\n        \"id\": \"a28872\",\n        \"name\": \"Classic burger\",\n        \"category\": \"burger and sandwich\",\n        \"description\": \"beef cutlet, lettuce, tomato, picked cucumber, Cheddar cheese\",\n        \"weight\": 305,\n        \"diet\": \"non-vegetarian\",\n        \"price\": 1900\n      }, {\n        \"id\": \"a77223\",\n        \"name\": \"Taco grill\",\n        \"category\": \"burger and sandwich\",\n        \"description\": \"cheese, firm loshi, lettuce, white beans, pesto sauce, tomato, cucumber\",\n        \"weight\": 319,\n        \"diet\": \"vegetarian\",\n        \"price\": 1850\n      }, {\n        \"id\": \"a29873\",\n        \"name\": \"Ratatoule\",\n        \"category\": \"garnish\",\n        \"description\": \"eggplant, pepper, zucchini, tomato, garlic\",\n        \"weight\": 210,\n        \"diet\": \"vegan\",\n        \"price\": 1800\n      }, {\n        \"id\": \"a22242\",\n        \"name\": \"Risotto with wild rice\",\n        \"category\": \"garnish\",\n        \"description\": \"pepper, zucchini, eggplant, champignon, wild rice, white wine, parmesan, cherry tomato\",\n        \"weight\": 240,\n        \"diet\": \"vegetarian\",\n        \"price\": 3200\n      }, {\n        \"id\": \"a55664\",\n        \"name\": \"Red velvet\",\n        \"category\": \"dessert\",\n        \"description\": \"whole wheat flour, egg\",\n        \"weight\": 187,\n        \"diet\": \"vegetarian\",\n        \"price\": 1600\n      }, {\n        \"id\": \"a10065\",\n        \"name\": \"Pancake with fruit\",\n        \"category\": \"dessert\",\n        \"description\": \"egg, milk, corn flour, cocoa, fruits, fruit sauce\",\n        \"weight\": 403,\n        \"diet\": \"vegetarian\",\n        \"price\": 1500\n      }, {\n        \"id\": \"a45374\",\n        \"name\": \"Red velvet\",\n        \"category\": \"dessert\",\n        \"description\": \"egg, milk, corn flour, cocoa, fruits\",\n        \"weight\": 417,\n        \"diet\": \"vegetarian\",\n        \"price\": 1500\n      }, {\n        \"id\": \"a35732\",\n        \"name\": \"Carrot\",\n        \"category\": \"dessert\",\n        \"description\": \"carrot, almond flour, coconut milk\",\n        \"weight\": 167,\n        \"diet\": \"vegetarian\",\n        \"price\": 1980\n      }, {\n        \"id\": \"a38421\",\n        \"name\": \"Schtrudel\",\n        \"category\": \"dessert\",\n        \"description\": \"whole wheat flour, egg, cocoa\",\n        \"weight\": 204,\n        \"diet\": \"vegetarian\",\n        \"price\": 1700\n      }, {\n        \"id\": \"a37425\",\n        \"name\": \"Red velvet\",\n        \"category\": \"dessert\",\n        \"description\": \"whole wheat flour, egg\",\n        \"weight\": 187,\n        \"diet\": \"vegetarian\",\n        \"price\": 1600\n      }]\n    };\n  }\n\n  renderTableHeader(cells) {\n    return cells.map((obj, index) => {\n      return /*#__PURE__*/_jsxDEV(\"th\", {\n        children: obj.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 24\n      }, this);\n    });\n  }\n\n  renderTableBody() {\n    const {\n      cells\n    } = this.props;\n    const data = this.state.data;\n    return data.map((item, rowIndex) => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        id: item.id,\n        children: cells.map((obj, index) => {\n          return /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item[obj.key]\n          }, obj.key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 36\n          }, this);\n        })\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 21\n      }, this);\n    });\n  }\n\n  render() {\n    const {\n      cells\n      /*, data*/\n\n    } = this.props; // this.props.cells = [];\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Garun Menu Table\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"fl-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: this.renderTableHeader(cells)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.renderTableBody(cells)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Table;","map":{"version":3,"sources":["/home/mary/react-table/src/components/Table.js"],"names":["React","Component","Table","constructor","props","state","data","renderTableHeader","cells","map","obj","index","name","renderTableBody","item","rowIndex","id","key","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;AAEA,MAAMC,KAAN,SAAoBD,SAApB,CAA8B;AAE1BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,CACF;AACI,cAAM,QADV;AAEI,gBAAQ,uBAFZ;AAGI,oBAAY,WAHhB;AAII,uBAAe,0FAJnB;AAKI,kBAAU,GALd;AAMI,gBAAQ,gBANZ;AAOI,iBAAS;AAPb,OADE,EAUF;AACI,cAAM,QADV;AAEI,gBAAQ,uBAFZ;AAGI,oBAAY,WAHhB;AAII,uBAAe,sDAJnB;AAKI,kBAAU,GALd;AAMI,gBAAQ,YANZ;AAOI,iBAAS;AAPb,OAVE,EAmBF;AACI,cAAM,QADV;AAEI,gBAAQ,+BAFZ;AAGI,oBAAY,YAHhB;AAII,uBAAe,uDAJnB;AAKI,kBAAU,GALd;AAMI,gBAAQ,YANZ;AAOI,iBAAS;AAPb,OAnBE,EA4BF;AACI,cAAM,QADV;AAEI,gBAAQ,iBAFZ;AAGI,oBAAY,YAHhB;AAII,uBAAe,6EAJnB;AAKI,kBAAU,GALd;AAMI,gBAAQ,YANZ;AAOI,iBAAS;AAPb,OA5BE,EAqCF;AACI,cAAM,QADV;AAEI,gBAAQ,mBAFZ;AAGI,oBAAY,QAHhB;AAII,uBAAe,mDAJnB;AAKI,kBAAU,GALd;AAMI,gBAAQ,OANZ;AAOI,iBAAS;AAPb,OArCE,EA8CF;AACI,cAAM,QADV;AAEI,gBAAQ,gBAFZ;AAGI,oBAAY,QAHhB;AAII,uBAAe,4EAJnB;AAKI,kBAAU,GALd;AAMI,gBAAQ,OANZ;AAOI,iBAAS;AAPb,OA9CE,EAuDF;AACI,cAAM,QADV;AAEI,gBAAQ,yBAFZ;AAGI,oBAAY,OAHhB;AAII,uBAAe,+BAJnB;AAKI,kBAAU,GALd;AAMI,gBAAQ,YANZ;AAOI,iBAAS;AAPb,OAvDE,EAgEF;AACI,cAAM,QADV;AAEI,gBAAQ,cAFZ;AAGI,oBAAY,OAHhB;AAII,uBAAe,4EAJnB;AAKI,kBAAU,GALd;AAMI,gBAAQ,gBANZ;AAOI,iBAAS;AAPb,OAhEE,EAyEF;AACI,cAAM,QADV;AAEI,gBAAQ,OAFZ;AAGI,oBAAY,aAHhB;AAII,uBAAe,oDAJnB;AAKI,kBAAU,GALd;AAMI,gBAAQ,gBANZ;AAOI,iBAAS;AAPb,OAzEE,EAkFF;AACI,cAAM,QADV;AAEI,gBAAQ,YAFZ;AAGI,oBAAY,OAHhB;AAII,uBAAe,yCAJnB;AAKI,kBAAU,GALd;AAMI,gBAAQ,YANZ;AAOI,iBAAS;AAPb,OAlFE,EA2FF;AACI,cAAM,QADV;AAEI,gBAAQ,WAFZ;AAGI,oBAAY,OAHhB;AAII,uBAAe,4GAJnB;AAKI,kBAAU,GALd;AAMI,gBAAQ,gBANZ;AAOI,iBAAS;AAPb,OA3FE,EAoGF;AACI,cAAM,QADV;AAEI,gBAAQ,iBAFZ;AAGI,oBAAY,aAHhB;AAII,uBAAe,oHAJnB;AAKI,kBAAU,GALd;AAMI,gBAAQ,gBANZ;AAOI,iBAAS;AAPb,OApGE,EA6GF;AACI,cAAM,QADV;AAEI,gBAAQ,wBAFZ;AAGI,oBAAY,OAHhB;AAII,uBAAe,4EAJnB;AAKI,kBAAU,GALd;AAMI,gBAAQ,gBANZ;AAOI,iBAAS;AAPb,OA7GE,EAsHF;AACI,cAAM,QADV;AAEI,gBAAQ,iBAFZ;AAGI,oBAAY,OAHhB;AAII,uBAAe,mEAJnB;AAKI,kBAAU,GALd;AAMI,gBAAQ,gBANZ;AAOI,iBAAS;AAPb,OAtHE,EA+HF;AACI,cAAM,QADV;AAEI,gBAAQ,gBAFZ;AAGI,oBAAY,qBAHhB;AAII,uBAAe,4CAJnB;AAKI,kBAAU,GALd;AAMI,gBAAQ,YANZ;AAOI,iBAAS;AAPb,OA/HE,EAwIF;AACI,cAAM,QADV;AAEI,gBAAQ,kBAFZ;AAGI,oBAAY,qBAHhB;AAII,uBAAe,8EAJnB;AAKI,kBAAU,GALd;AAMI,gBAAQ,OANZ;AAOI,iBAAS;AAPb,OAxIE,EAiJF;AACI,cAAM,QADV;AAEI,gBAAQ,gBAFZ;AAGI,oBAAY,qBAHhB;AAII,uBAAe,+DAJnB;AAKI,kBAAU,GALd;AAMI,gBAAQ,gBANZ;AAOI,iBAAS;AAPb,OAjJE,EA0JF;AACI,cAAM,QADV;AAEI,gBAAQ,YAFZ;AAGI,oBAAY,qBAHhB;AAII,uBAAe,yEAJnB;AAKI,kBAAU,GALd;AAMI,gBAAQ,YANZ;AAOI,iBAAS;AAPb,OA1JE,EAmKF;AACI,cAAM,QADV;AAEI,gBAAQ,WAFZ;AAGI,oBAAY,SAHhB;AAII,uBAAe,4CAJnB;AAKI,kBAAU,GALd;AAMI,gBAAQ,OANZ;AAOI,iBAAS;AAPb,OAnKE,EA4KF;AACI,cAAM,QADV;AAEI,gBAAQ,wBAFZ;AAGI,oBAAY,SAHhB;AAII,uBAAe,wFAJnB;AAKI,kBAAU,GALd;AAMI,gBAAQ,YANZ;AAOI,iBAAS;AAPb,OA5KE,EAqLF;AACI,cAAM,QADV;AAEI,gBAAQ,YAFZ;AAGI,oBAAY,SAHhB;AAII,uBAAe,wBAJnB;AAKI,kBAAU,GALd;AAMI,gBAAQ,YANZ;AAOI,iBAAS;AAPb,OArLE,EA8LF;AACI,cAAM,QADV;AAEI,gBAAQ,oBAFZ;AAGI,oBAAY,SAHhB;AAII,uBAAe,mDAJnB;AAKI,kBAAU,GALd;AAMI,gBAAQ,YANZ;AAOI,iBAAS;AAPb,OA9LE,EAuMF;AACI,cAAM,QADV;AAEI,gBAAQ,YAFZ;AAGI,oBAAY,SAHhB;AAII,uBAAe,sCAJnB;AAKI,kBAAU,GALd;AAMI,gBAAQ,YANZ;AAOI,iBAAS;AAPb,OAvME,EAgNF;AACI,cAAM,QADV;AAEI,gBAAQ,QAFZ;AAGI,oBAAY,SAHhB;AAII,uBAAe,oCAJnB;AAKI,kBAAU,GALd;AAMI,gBAAQ,YANZ;AAOI,iBAAS;AAPb,OAhNE,EAyNF;AACI,cAAM,QADV;AAEI,gBAAQ,WAFZ;AAGI,oBAAY,SAHhB;AAII,uBAAe,+BAJnB;AAKI,kBAAU,GALd;AAMI,gBAAQ,YANZ;AAOI,iBAAS;AAPb,OAzNE,EAkOF;AACI,cAAM,QADV;AAEI,gBAAQ,YAFZ;AAGI,oBAAY,SAHhB;AAII,uBAAe,wBAJnB;AAKI,kBAAU,GALd;AAMI,gBAAQ,YANZ;AAOI,iBAAS;AAPb,OAlOE;AADG,KAAb;AA8OH;;AAEDC,EAAAA,iBAAiB,CAACC,KAAD,EAAQ;AACrB,WACIA,KAAK,CAACC,GAAN,CAAU,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACtB,0BAAO;AAAA,kBAAiBD,GAAG,CAACE;AAArB,SAASD,KAAT;AAAA;AAAA;AAAA;AAAA,cAAP;AAAuC,KAD3C,CADJ;AAKH;;AAEDE,EAAAA,eAAe,GAAG;AACd,UAAM;AAACL,MAAAA;AAAD,QAAU,KAAKJ,KAArB;AACA,UAAME,IAAI,GAAG,KAAKD,KAAL,CAAWC,IAAxB;AACA,WAAOA,IAAI,CAACG,GAAL,CAAS,CAACK,IAAD,EAAOC,QAAP,KAAoB;AAC5B,0BACI;AAAmB,QAAA,EAAE,EAAED,IAAI,CAACE,EAA5B;AAAA,kBACKR,KAAK,CAACC,GAAN,CAAU,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACvB,8BAAO;AAAA,sBAAmBG,IAAI,CAACJ,GAAG,CAACO,GAAL;AAAvB,aAASP,GAAG,CAACO,GAAb;AAAA;AAAA;AAAA;AAAA,kBAAP;AAA8C,SADjD;AADL,SAASF,QAAT;AAAA;AAAA;AAAA;AAAA,cADJ;AAOH,KARE,CAAP;AAUH;;AAEDG,EAAAA,MAAM,GAAG;AACL,UAAM;AAACV,MAAAA;AAAK;;AAAN,QAAoB,KAAKJ,KAA/B,CADK,CAEL;;AACA,wBACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,SAAS,EAAC,UAAjB;AAAA,gCACI;AAAA,iCACI;AAAA,sBAAK,KAAKG,iBAAL,CAAuBC,KAAvB;AAAL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAA,oBACC,KAAKK,eAAL,CAAqBL,KAArB;AADD;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAaH;;AA3RyB;;AA8R9B,eAAeN,KAAf","sourcesContent":["import React, {Component} from \"react\";\n\nclass Table extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [\n                {\n                    \"id\": \"a16627\",\n                    \"name\": \"Continental breakfast\",\n                    \"category\": \"breakfast\",\n                    \"description\": \"turkey fillet, cheese Cheddar, small croissant, grilled baguette, honey, avocado pashtet\",\n                    \"weight\": 250,\n                    \"diet\": \"non-vegetarian\",\n                    \"price\": 1900\n                },\n                {\n                    \"id\": \"a13739\",\n                    \"name\": \"Breakfast Healthy Box\",\n                    \"category\": \"breakfast\",\n                    \"description\": \"broccoli, avocado, toast, egg, quinoa, cherry tomato\",\n                    \"weight\": 450,\n                    \"diet\": \"vegetarian\",\n                    \"price\": 2490\n                },\n                {\n                    \"id\": \"a93675\",\n                    \"name\": \"Bruschetta with cherry tomato\",\n                    \"category\": \"appetizers\",\n                    \"description\": \"baguette, cherry tomato, cheese Parmesan, pesto sauce\",\n                    \"weight\": 252,\n                    \"diet\": \"vegetarian\",\n                    \"price\": 1800\n                },\n                {\n                    \"id\": \"a93472\",\n                    \"name\": \"Vegetable plate\",\n                    \"category\": \"appetizers\",\n                    \"description\": \"cherry tomato, carrot, red radish, cucumber, pepper, parsley, tar-tar sauce\",\n                    \"weight\": 312,\n                    \"diet\": \"vegetarian\",\n                    \"price\": 2700\n                },\n                {\n                    \"id\": \"a36395\",\n                    \"name\": \"Salad with quinoa\",\n                    \"category\": \"salads\",\n                    \"description\": \"quinoa, tomato, cucumber, pepper, avocado, orange\",\n                    \"weight\": 290,\n                    \"diet\": \"vegan\",\n                    \"price\": 1900\n                },\n                {\n                    \"id\": \"a39832\",\n                    \"name\": \"Broccoli salad\",\n                    \"category\": \"salads\",\n                    \"description\": \"broccoli, cherry tomato, tofu cheese, avocado, Brussel cabbage, grapefruit\",\n                    \"weight\": 232,\n                    \"diet\": \"vegan\",\n                    \"price\": 2450\n                },\n                {\n                    \"id\": \"a47372\",\n                    \"name\": \"Cream-soup with pumpkin\",\n                    \"category\": \"soups\",\n                    \"description\": \"pumpkin, onion, cream, garlic\",\n                    \"weight\": 350,\n                    \"diet\": \"vegetarian\",\n                    \"price\": 1500\n                },\n                {\n                    \"id\": \"a75296\",\n                    \"name\": \"Seafood soup\",\n                    \"category\": \"soups\",\n                    \"description\": \"salmon fillet, crab, calamari, mussels, cherry tomato, tomato juice, onion\",\n                    \"weight\": 350,\n                    \"diet\": \"non-vegetarian\",\n                    \"price\": 3850\n                },\n                {\n                    \"id\": \"a55543\",\n                    \"name\": \"Steak\",\n                    \"category\": \"meat dishes\",\n                    \"description\": \"beef fillet, garlic, sauce salsa, onion, asparagus\",\n                    \"weight\": 275,\n                    \"diet\": \"non-vegetarian\",\n                    \"price\": 6900\n                },\n                {\n                    \"id\": \"a11863\",\n                    \"name\": \"Chuka bowl\",\n                    \"category\": \"bowls\",\n                    \"description\": \"sea cabbage, Cherry tomato, curd cheese\",\n                    \"weight\": 132,\n                    \"diet\": \"vegetarian\",\n                    \"price\": 1800\n                },\n                {\n                    \"id\": \"a44004\",\n                    \"name\": \"Poka bowl\",\n                    \"category\": \"bowls\",\n                    \"description\": \"salmon fillet, sea cabbage, curd cheese, rice, Cherry tomato, avocado, lemon, lettuce, balsamic cream, oil\",\n                    \"weight\": 350,\n                    \"diet\": \"non-vegetarian\",\n                    \"price\": 6500\n                },\n                {\n                    \"id\": \"a68935\",\n                    \"name\": \"Grilled chicken\",\n                    \"category\": \"meat dishes\",\n                    \"description\": \"chicken breast, thyme, cherry tomato, mangold, bell pepper, cucumber, zucchini, carrot, soya sauce, sauce Bechamel\",\n                    \"weight\": 290,\n                    \"diet\": \"non-vegetarian\",\n                    \"price\": 2300\n                },\n                {\n                    \"id\": \"a68293\",\n                    \"name\": \"Pasta with pesto sauce\",\n                    \"category\": \"pasta\",\n                    \"description\": \"pesto sauce, garlic, cherry tomato, parmesan, spinach, zucchini, spaghetti\",\n                    \"weight\": 280,\n                    \"diet\": \"non-vegetarian\",\n                    \"price\": 2400\n                },\n                {\n                    \"id\": \"a26837\",\n                    \"name\": \"Pasta Carbonara\",\n                    \"category\": \"pasta\",\n                    \"description\": \"spaghetti, bacon, cream, quail eggs, cheese Parmesan, dried basil\",\n                    \"weight\": 250,\n                    \"diet\": \"non-vegetarian\",\n                    \"price\": 2650\n                },\n                {\n                    \"id\": \"a88263\",\n                    \"name\": \"Avocado burger\",\n                    \"category\": \"burger and sandwich\",\n                    \"description\": \"spinach, tomato, avocado, white sauce, egg\",\n                    \"weight\": 320,\n                    \"diet\": \"vegetarian\",\n                    \"price\": 2100\n                },\n                {\n                    \"id\": \"a62578\",\n                    \"name\": \"Vegetable burger\",\n                    \"category\": \"burger and sandwich\",\n                    \"description\": \"vegetable cutlet, tomato, red onion, French sauce, lettuce, pickled cucumber\",\n                    \"weight\": 299,\n                    \"diet\": \"vegan\",\n                    \"price\": 1600\n                },\n                {\n                    \"id\": \"a28872\",\n                    \"name\": \"Classic burger\",\n                    \"category\": \"burger and sandwich\",\n                    \"description\": \"beef cutlet, lettuce, tomato, picked cucumber, Cheddar cheese\",\n                    \"weight\": 305,\n                    \"diet\": \"non-vegetarian\",\n                    \"price\": 1900\n                },\n                {\n                    \"id\": \"a77223\",\n                    \"name\": \"Taco grill\",\n                    \"category\": \"burger and sandwich\",\n                    \"description\": \"cheese, firm loshi, lettuce, white beans, pesto sauce, tomato, cucumber\",\n                    \"weight\": 319,\n                    \"diet\": \"vegetarian\",\n                    \"price\": 1850\n                },\n                {\n                    \"id\": \"a29873\",\n                    \"name\": \"Ratatoule\",\n                    \"category\": \"garnish\",\n                    \"description\": \"eggplant, pepper, zucchini, tomato, garlic\",\n                    \"weight\": 210,\n                    \"diet\": \"vegan\",\n                    \"price\": 1800\n                },\n                {\n                    \"id\": \"a22242\",\n                    \"name\": \"Risotto with wild rice\",\n                    \"category\": \"garnish\",\n                    \"description\": \"pepper, zucchini, eggplant, champignon, wild rice, white wine, parmesan, cherry tomato\",\n                    \"weight\": 240,\n                    \"diet\": \"vegetarian\",\n                    \"price\": 3200\n                },\n                {\n                    \"id\": \"a55664\",\n                    \"name\": \"Red velvet\",\n                    \"category\": \"dessert\",\n                    \"description\": \"whole wheat flour, egg\",\n                    \"weight\": 187,\n                    \"diet\": \"vegetarian\",\n                    \"price\": 1600\n                },\n                {\n                    \"id\": \"a10065\",\n                    \"name\": \"Pancake with fruit\",\n                    \"category\": \"dessert\",\n                    \"description\": \"egg, milk, corn flour, cocoa, fruits, fruit sauce\",\n                    \"weight\": 403,\n                    \"diet\": \"vegetarian\",\n                    \"price\": 1500\n                },\n                {\n                    \"id\": \"a45374\",\n                    \"name\": \"Red velvet\",\n                    \"category\": \"dessert\",\n                    \"description\": \"egg, milk, corn flour, cocoa, fruits\",\n                    \"weight\": 417,\n                    \"diet\": \"vegetarian\",\n                    \"price\": 1500\n                },\n                {\n                    \"id\": \"a35732\",\n                    \"name\": \"Carrot\",\n                    \"category\": \"dessert\",\n                    \"description\": \"carrot, almond flour, coconut milk\",\n                    \"weight\": 167,\n                    \"diet\": \"vegetarian\",\n                    \"price\": 1980\n                },\n                {\n                    \"id\": \"a38421\",\n                    \"name\": \"Schtrudel\",\n                    \"category\": \"dessert\",\n                    \"description\": \"whole wheat flour, egg, cocoa\",\n                    \"weight\": 204,\n                    \"diet\": \"vegetarian\",\n                    \"price\": 1700\n                },\n                {\n                    \"id\": \"a37425\",\n                    \"name\": \"Red velvet\",\n                    \"category\": \"dessert\",\n                    \"description\": \"whole wheat flour, egg\",\n                    \"weight\": 187,\n                    \"diet\": \"vegetarian\",\n                    \"price\": 1600\n                }\n            ]\n        }\n    }\n\n    renderTableHeader(cells) {\n        return (\n            cells.map((obj, index) => {\n                return <th key={index}>{obj.name}</th>}\n            )\n        );\n    }\n\n    renderTableBody() {\n        const {cells} = this.props;\n        const data = this.state.data;\n        return data.map((item, rowIndex) => {\n                return (\n                    <tr key={rowIndex} id={item.id}>\n                        {cells.map((obj, index) => {\n                            return <td key={obj.key}>{item[obj.key]}</td>}\n                        )}\n                    </tr>\n                )\n            }\n        );\n    }\n\n    render() {\n        const {cells/*, data*/} = this.props;\n        // this.props.cells = [];\n        return (\n            <div>\n                <h1>Garun Menu Table</h1>\n                <table className='fl-table'>\n                    <thead>\n                        <tr>{this.renderTableHeader(cells)}</tr>\n                    </thead>\n                    <tbody>\n                    {this.renderTableBody(cells)}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\nexport default Table;\n\n"]},"metadata":{},"sourceType":"module"}